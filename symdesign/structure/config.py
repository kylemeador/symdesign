from collections import defaultdict
from typing import Literal, get_args

from symdesign.sequence import protein_letters3_alph1, protein_letters_3to1_extended

protein_letters_3to1_extended_mse = protein_letters_3to1_extended.copy()
protein_letters_3to1_extended_mse['MSE'] = 'M'
DEFAULT_SS_PROGRAM = 'stride'
DEFAULT_SS_COIL_IDENTIFIER = 'C'
"""Secondary structure identifier mapping
Stride
B/b:Isolated bridge
E:Strand/Extended conformation 
G:3-10 helix
H:Alpha helix
I:PI-helix
T:Turn
C:Coil (none of the above)
SS_TURN_IDENTIFIERS = 'T'
SS_DISORDER_IDENTIFIERS = 'C'

DSSP
B:beta bridge
E:strand/beta bulge
G:310 helix
H:α helix
I:π helix
T:turns
S:high curvature (where the angle between i-2, i, and i+2 is at least 70°)
" "(space):loop
SS_DISORDER_IDENTIFIERS = ' '
SS_TURN_IDENTIFIERS = 'TS'
"""
SS_HELIX_IDENTIFIERS = 'H'
SS_TURN_IDENTIFIERS = 'T'
SS_DISORDER_IDENTIFIERS = 'C'
directives = Literal[
    'special', 'same', 'different', 'charged', 'polar', 'hydrophobic', 'aromatic', 'hbonding', 'branched']
mutation_directives: tuple[directives, ...] = get_args(directives)
atom_or_residue_literal = Literal['atom', 'residue']
structure_container_types = Literal['atoms', 'residues', 'chains', 'entities']
protein_backbone_atom_types = {'N', 'CA', 'C', 'O'}
protein_backbone_and_cb_atom_types = {'N', 'CA', 'C', 'O', 'CB'}
phosphate_backbone_atom_types = {'P', 'OP1', 'OP2'}
# P, OP1, OP2,
dna_sugar_atom_types = {"O5'", "C5'", "C4'", "O4'", "C3'", "O3'", "C2'", "C1'"}
# O5', C5', C4', O4', C3', O3', C2', O2', C1'  # RNA only
rna_sugar_atom_types = dna_sugar_atom_types | {"O2'"}
# O5', C5', C4', O4', C3', O3', C2', C1'  # DNA only
# For A, i.e. adenosine
# N9, C8, N7, C5, C6, N6, N1, C2, N3, C4
# For DA, i.e. deoxyadenosine
# N9, C8, N7, C5, C6, N6, N1, C2, N3, C4
# For C, i.e. cytosine
# N1, C2, O2, N3, C4, N4, C5, C6
# For DC, i.e. deoxycytosine
# N1, C2, O2, N3, C4, N4, C5, C6
# For G i.e. guanosine
# N9, C8, N7, C5, C6, O6, N1, C2, N2, N3, C4
# For DG i.e. deoxyguanosine
# N9, C8, N7, C5, C6, O6, N1, C2, N2, N3, C4
# For U i.e. urosil
# N1, C2, O2, N3, C4, O4, C5, C6
# For DT, i.e. deoxythymidine
# N1, C2, O2, N3, C4, O4, C5, C7, C6
residue_properties = {
    'ALA': {'hydrophobic', 'apolar'},
    'CYS': {'special', 'hydrophobic', 'apolar', 'polar', 'hbonding'},
    'ASP': {'charged', 'polar', 'hbonding'},
    'GLU': {'charged', 'polar', 'hbonding'},
    'PHE': {'hydrophobic', 'apolar', 'aromatic'},
    'GLY': {'special'},
    'HIS': {'charged', 'polar', 'aromatic', 'hbonding'},
    'ILE': {'hydrophobic', 'apolar', 'branched'},
    'LYS': {'charged', 'polar', 'hbonding'},
    'LEU': {'hydrophobic', 'apolar', 'branched'},
    'MET': {'hydrophobic', 'apolar'},
    'ASN': {'polar', 'hbonding'},
    'PRO': {'special', 'hydrophobic', 'apolar'},
    'GLN': {'polar', 'hbonding'},
    'ARG': {'charged', 'polar', 'hbonding'},
    'SER': {'polar', 'hbonding'},
    'THR': {'polar', 'hbonding', 'branched'},
    'VAL': {'hydrophobic', 'apolar', 'branched'},
    'TRP': {'hydrophobic', 'apolar', 'aromatic', 'hbonding'},
    'TYR': {'hydrophobic', 'apolar', 'aromatic', 'hbonding'}
}
# useful in generating aa_by_property from mutation_directives and residue_properties
# aa_by_property = {}
# for type_ in mutation_directives:
#     aa_by_property[type_] = set()
#     for res in residue_properties:
#         if type_ in residue_properties[res]:
#             aa_by_property[type_].append(res)
#     aa_by_property[type_] = list(aa_by_property[type_])
aa_by_property = \
    {'special': {'CYS', 'GLY', 'PRO'},
     'charged': {'ARG', 'GLU', 'ASP', 'HIS', 'LYS'},
     'polar': {'CYS', 'ASP', 'GLU', 'HIS', 'LYS', 'ASN', 'GLN', 'ARG', 'SER', 'THR'},
     'apolar': {'ALA', 'CYS', 'PHE', 'ILE', 'LEU', 'MET', 'PRO', 'VAL', 'TRP', 'TYR'},
     'hydrophobic': {'ALA', 'CYS', 'PHE', 'ILE', 'LEU', 'MET', 'PRO', 'VAL', 'TRP', 'TYR'},  # same as apolar
     'aromatic': {'PHE', 'HIS', 'TRP', 'TYR'},
     'hbonding': {'CYS', 'ASP', 'GLU', 'HIS', 'LYS', 'ASN', 'GLN', 'ARG', 'SER', 'THR', 'TRP', 'TYR'},
     'branched': {'ILE', 'LEU', 'THR', 'VAL'}}
gxg_sasa = {'A': 129, 'R': 274, 'N': 195, 'D': 193, 'C': 167, 'E': 223, 'Q': 225, 'G': 104, 'H': 224, 'I': 197,
            'L': 201, 'K': 236, 'M': 224, 'F': 240, 'P': 159, 'S': 155, 'T': 172, 'W': 285, 'Y': 263, 'V': 174,
            'ALA': 129, 'ARG': 274, 'ASN': 195, 'ASP': 193, 'CYS': 167, 'GLU': 223, 'GLN': 225, 'GLY': 104, 'HIS': 224,
            'ILE': 197, 'LEU': 201, 'LYS': 236, 'MET': 224, 'PHE': 240, 'PRO': 159, 'SER': 155, 'THR': 172, 'TRP': 285,
            'TYR': 263, 'VAL': 174}  # From table 1, theoretical values of Tien et al. 2013, PMID:24278298
# This publication claims to have normalized tripeptides of all the standard AA which can be used to calculate non-polar
# and polar area: https://doi.org/10.1016/j.compbiolchem.2014.11.007
# They are not actually available, however. Should email authors to acquire these...
# Set up hydrophobicity values for various calculations
black_and_mould = [
    0.702, 0.987, -1.935, -1.868, 2.423, 0.184, -1.321, 2.167, -0.790, 2.167, 1.246, -1.003, 1.128, -0.936, -2.061,
    -0.453, -0.042, 1.640, 1.878, 1.887
]
hydrophobicity_values = \
    dict(black_and_mould=dict(zip(protein_letters3_alph1, black_and_mould)))
glycine_val = black_and_mould[5]
# This is used for the SAP calculation. See PMID:19571001
hydrophobicity_values_glycine_centered = {value_name: {aa: value - glycine_val for aa, value in values.items()}
                                          for value_name, values in hydrophobicity_values.items()}
polarity_types_literal = Literal['apolar', 'polar']
sasa_types_literal = Literal['total', polarity_types_literal]
sasa_types: tuple[polarity_types_literal, ...] = get_args(sasa_types_literal)
polarity_types: tuple[polarity_types_literal, ...] = get_args(polarity_types_literal)
HYDROGEN_RADIUS = 1.10
NITROGEN_RADIUS = 1.64
OXYGEN_RADIUS = 1.46
O_CARBONYL_RADIUS = 1.42
SULFUR_RADIUS = 1.77
CARBON_SP2_H_RADIUS = 1.76
CARBON_SP3_RADIUS = 1.88
CARBON_SP2_RADIUS = 1.61
element_radius = {
    'H': HYDROGEN_RADIUS,
    'N': NITROGEN_RADIUS,
    'O': OXYGEN_RADIUS,
    'C': CARBON_SP3_RADIUS,
    'S': SULFUR_RADIUS,
}
atom_radii = {
    'C3H0': CARBON_SP2_RADIUS,
    'C3H1': CARBON_SP2_H_RADIUS,
    'C4H1': CARBON_SP3_RADIUS,
    'C4H2': CARBON_SP3_RADIUS,
    'C4H3': CARBON_SP3_RADIUS,
    'N3H0': NITROGEN_RADIUS,
    'N3H1': NITROGEN_RADIUS,
    'N3H2': NITROGEN_RADIUS,
    'N4H3': NITROGEN_RADIUS,
    'O1H0': O_CARBONYL_RADIUS,
    'O2H1': OXYGEN_RADIUS,
    'S2H0': SULFUR_RADIUS,
    'S2H1': SULFUR_RADIUS,
    'polarH': HYDROGEN_RADIUS,
    'apolarH': HYDROGEN_RADIUS,
    'P4H0': 1.8,  # Nucleic acids
    'O2H0': OXYGEN_RADIUS,  # Nucleic acids
    'O2H2': OXYGEN_RADIUS,  # Water
    'SE2H1': 1.9,  # SEC
    'X1H0': 1.5,  # ASX, GLX
    'N2H0': NITROGEN_RADIUS,  # PYL
    'N2H2': NITROGEN_RADIUS,  # N2H2 is really N3H2'
}
APOLAR_DESIGNATION = 0
POLAR_DESIGNATION = 1
UNKNOWN_DESIGNATION = -1
atomic_polarity_table = {
    'ALA': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION}),
    'ARG': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD': APOLAR_DESIGNATION, 'NE': POLAR_DESIGNATION, 'CZ': APOLAR_DESIGNATION,
                                       'NH1': POLAR_DESIGNATION, 'NH2': POLAR_DESIGNATION}),
    'ASN': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'OD1': POLAR_DESIGNATION, 'ND2': POLAR_DESIGNATION}),
    'ASP': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'OD1': POLAR_DESIGNATION, 'OD2': POLAR_DESIGNATION}),
    'CYS': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'SG': POLAR_DESIGNATION}),
    'GLN': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD': APOLAR_DESIGNATION, 'OE1': POLAR_DESIGNATION, 'NE2': POLAR_DESIGNATION}),
    'GLU': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD': APOLAR_DESIGNATION, 'OE1': POLAR_DESIGNATION, 'OE2': POLAR_DESIGNATION}),
    'GLY': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION}),
    'HIS': defaultdict(lambda: UNKNOWN_DESIGNATION,
                       {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'ND1': POLAR_DESIGNATION, 'CD2': APOLAR_DESIGNATION, 'CE1': APOLAR_DESIGNATION, 'NE2': POLAR_DESIGNATION}),
    'ILE': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG1': APOLAR_DESIGNATION, 'CG2': APOLAR_DESIGNATION, 'CD1': APOLAR_DESIGNATION}),
    'LEU': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD1': APOLAR_DESIGNATION, 'CD2': APOLAR_DESIGNATION}),
    'LYS': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD': APOLAR_DESIGNATION, 'CE': APOLAR_DESIGNATION, 'NZ': POLAR_DESIGNATION}),
    'MET': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'SD': POLAR_DESIGNATION, 'CE': APOLAR_DESIGNATION}),
    'PHE': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD1': APOLAR_DESIGNATION, 'CD2': APOLAR_DESIGNATION, 'CE1': APOLAR_DESIGNATION,
                                       'CE2': APOLAR_DESIGNATION, 'CZ': APOLAR_DESIGNATION}),
    'PRO': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD': APOLAR_DESIGNATION}),
    'SER': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'OG': POLAR_DESIGNATION}),
    'THR': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'OG1': POLAR_DESIGNATION, 'CG2': APOLAR_DESIGNATION}),
    'TRP': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD1': APOLAR_DESIGNATION, 'CD2': APOLAR_DESIGNATION, 'NE1': POLAR_DESIGNATION,
                                       'CE2': APOLAR_DESIGNATION, 'CE3': APOLAR_DESIGNATION, 'CZ2': APOLAR_DESIGNATION, 'CZ3': APOLAR_DESIGNATION, 'CH2': APOLAR_DESIGNATION}),
    'TYR': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG': APOLAR_DESIGNATION, 'CD1': APOLAR_DESIGNATION, 'CD2': APOLAR_DESIGNATION, 'CE1': APOLAR_DESIGNATION,
                                       'CE2': APOLAR_DESIGNATION, 'CZ': APOLAR_DESIGNATION, 'OH': POLAR_DESIGNATION}),
    'VAL': defaultdict(lambda: UNKNOWN_DESIGNATION, {'N': POLAR_DESIGNATION, 'CA': APOLAR_DESIGNATION, 'C': APOLAR_DESIGNATION, 'O': POLAR_DESIGNATION, 'CB': APOLAR_DESIGNATION, 'CG1': APOLAR_DESIGNATION, 'CG2': APOLAR_DESIGNATION})}
hydrogens = {   # The doubled numbers (and single number second) are from PDB version of hydrogen inclusion
    'ALA': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '3HB': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HB3': APOLAR_DESIGNATION},
    'ARG': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '1HG': APOLAR_DESIGNATION, '2HG': APOLAR_DESIGNATION, '1HD': APOLAR_DESIGNATION, '2HD': APOLAR_DESIGNATION, 'HE': POLAR_DESIGNATION, '1HH1': POLAR_DESIGNATION, '2HH1': POLAR_DESIGNATION,
            '1HH2': POLAR_DESIGNATION, '2HH2': POLAR_DESIGNATION,
            'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HG1': APOLAR_DESIGNATION, 'HG2': APOLAR_DESIGNATION, 'HD1': APOLAR_DESIGNATION, 'HD2': APOLAR_DESIGNATION, 'HH11': POLAR_DESIGNATION, 'HH12': POLAR_DESIGNATION, 'HH21': POLAR_DESIGNATION, 'HH22': POLAR_DESIGNATION},
    'ASN': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '1HD2': POLAR_DESIGNATION, '2HD2': POLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HD21': POLAR_DESIGNATION, 'HD22': POLAR_DESIGNATION,
            '1HD1': POLAR_DESIGNATION, '2HD1': POLAR_DESIGNATION, 'HD11': POLAR_DESIGNATION, 'HD12': POLAR_DESIGNATION},  # These are the alternative specification
    'ASP': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION},
    'CYS': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HG': POLAR_DESIGNATION},
    'GLN': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '1HG': APOLAR_DESIGNATION, '2HG': APOLAR_DESIGNATION, '1HE2': POLAR_DESIGNATION, '2HE2': POLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HG1': APOLAR_DESIGNATION,
            'HG2': APOLAR_DESIGNATION, 'HE21': POLAR_DESIGNATION, 'HE22': POLAR_DESIGNATION,
            '1HE1': POLAR_DESIGNATION, '2HE1': POLAR_DESIGNATION, 'HE11': POLAR_DESIGNATION, 'HE12': POLAR_DESIGNATION},  # These are the alternative specification
    'GLU': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '1HG': APOLAR_DESIGNATION, '2HG': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HG1': APOLAR_DESIGNATION, 'HG2': APOLAR_DESIGNATION},
    'GLY': {'H': POLAR_DESIGNATION, '1HA': APOLAR_DESIGNATION, 'HA1': APOLAR_DESIGNATION, '2HA': APOLAR_DESIGNATION, 'HA2': APOLAR_DESIGNATION, '3HA': APOLAR_DESIGNATION, 'HA3': APOLAR_DESIGNATION},
    'HIS': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, 'HD1': POLAR_DESIGNATION, 'HD2': APOLAR_DESIGNATION, 'HE1': APOLAR_DESIGNATION, 'HE2': POLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, '1HD': POLAR_DESIGNATION,
            '2HD': APOLAR_DESIGNATION, '1HE': APOLAR_DESIGNATION, '2HE': POLAR_DESIGNATION},  # This assumes HD1 is on NDPOLAR_DESIGNATION, HE2 is on NE2
    'ILE': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, 'HB': APOLAR_DESIGNATION, '1HG1': APOLAR_DESIGNATION, '2HG1': APOLAR_DESIGNATION, '1HG2': APOLAR_DESIGNATION, '2HG2': APOLAR_DESIGNATION, '3HG2': APOLAR_DESIGNATION, '1HD1': APOLAR_DESIGNATION, '2HD1': APOLAR_DESIGNATION,
            '3HD1': APOLAR_DESIGNATION, 'HG11': APOLAR_DESIGNATION, 'HG12': APOLAR_DESIGNATION, 'HG21': APOLAR_DESIGNATION, 'HG22': APOLAR_DESIGNATION, 'HG23': APOLAR_DESIGNATION, 'HD11': APOLAR_DESIGNATION, 'HD12': APOLAR_DESIGNATION, 'HD13': APOLAR_DESIGNATION,
            'HG13': APOLAR_DESIGNATION, '3HG1': APOLAR_DESIGNATION},  # This is the alternative specification
    'LEU': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, 'HG': APOLAR_DESIGNATION, '1HD1': APOLAR_DESIGNATION, '2HD1': APOLAR_DESIGNATION, '3HD1': APOLAR_DESIGNATION, '1HD2': APOLAR_DESIGNATION, '2HD2': APOLAR_DESIGNATION,
            '3HD2': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HD11': APOLAR_DESIGNATION, 'HD12': APOLAR_DESIGNATION, 'HD13': APOLAR_DESIGNATION, 'HD21': APOLAR_DESIGNATION, 'HD22': APOLAR_DESIGNATION, 'HD23': APOLAR_DESIGNATION},
    'LYS': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '1HG': APOLAR_DESIGNATION, '2HG': APOLAR_DESIGNATION, '1HD': APOLAR_DESIGNATION, '2HD': APOLAR_DESIGNATION, '1HE': APOLAR_DESIGNATION, '2HE': APOLAR_DESIGNATION, '1HZ': POLAR_DESIGNATION,
            '2HZ': POLAR_DESIGNATION, '3HZ': POLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HG1': APOLAR_DESIGNATION, 'HG2': APOLAR_DESIGNATION, 'HD1': APOLAR_DESIGNATION, 'HD2': APOLAR_DESIGNATION, 'HE1': APOLAR_DESIGNATION, 'HE2': APOLAR_DESIGNATION,
            'HZ1': POLAR_DESIGNATION, 'HZ2': POLAR_DESIGNATION, 'HZ3': POLAR_DESIGNATION},
    'MET': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '1HG': APOLAR_DESIGNATION, '2HG': APOLAR_DESIGNATION, '1HE': APOLAR_DESIGNATION, '2HE': APOLAR_DESIGNATION, '3HE': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION,
            'HG1': APOLAR_DESIGNATION, 'HG2': APOLAR_DESIGNATION, 'HE1': APOLAR_DESIGNATION, 'HE2': APOLAR_DESIGNATION, 'HE3': APOLAR_DESIGNATION},
    'PHE': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, 'HD1': APOLAR_DESIGNATION, 'HD2': APOLAR_DESIGNATION, 'HE1': APOLAR_DESIGNATION, 'HE2': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, '1HD': APOLAR_DESIGNATION,
            '2HD': APOLAR_DESIGNATION, '1HE': APOLAR_DESIGNATION, '2HE': APOLAR_DESIGNATION, 'HZ': APOLAR_DESIGNATION},
    'PRO': {'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '1HG': APOLAR_DESIGNATION, '2HG': APOLAR_DESIGNATION, '1HD': APOLAR_DESIGNATION, '2HD': POLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HG1': APOLAR_DESIGNATION, 'HG2': APOLAR_DESIGNATION,
            'HD1': APOLAR_DESIGNATION, 'HD2': POLAR_DESIGNATION},
    # Yes, 3HB is not in existence on this residue, but 5upp.pdb has it...
    'SER': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, '3HB': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, 'HB3': APOLAR_DESIGNATION, 'HG': POLAR_DESIGNATION},
    'THR': {'HA': APOLAR_DESIGNATION, 'HB': APOLAR_DESIGNATION, 'H': POLAR_DESIGNATION, 'HG1': POLAR_DESIGNATION, '1HG2': APOLAR_DESIGNATION, '2HG2': APOLAR_DESIGNATION, '3HG2': APOLAR_DESIGNATION, '1HG': POLAR_DESIGNATION, 'HG21': APOLAR_DESIGNATION, 'HG22': APOLAR_DESIGNATION,
            # These are the alternative specification
            'HG23': APOLAR_DESIGNATION, 'HG2': POLAR_DESIGNATION, '1HG1': APOLAR_DESIGNATION, '2HG1': APOLAR_DESIGNATION, '3HG1': APOLAR_DESIGNATION, '2HG': POLAR_DESIGNATION, 'HG11': APOLAR_DESIGNATION, 'HG12': APOLAR_DESIGNATION, 'HG13': APOLAR_DESIGNATION},
    'TRP': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, 'HD1': APOLAR_DESIGNATION, 'HE1': POLAR_DESIGNATION, 'HE3': APOLAR_DESIGNATION, 'HZ2': APOLAR_DESIGNATION, 'HZ3': APOLAR_DESIGNATION, 'HH2': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION,
            'HB2': APOLAR_DESIGNATION, '1HD': APOLAR_DESIGNATION, '1HE': POLAR_DESIGNATION, '3HE': APOLAR_DESIGNATION, '2HZ': APOLAR_DESIGNATION, '3HZ': APOLAR_DESIGNATION, '2HH': APOLAR_DESIGNATION,  # Assumes HE1 is on NE1
            'HE2': APOLAR_DESIGNATION, 'HZ1': APOLAR_DESIGNATION, 'HH1': APOLAR_DESIGNATION, 'HH3': APOLAR_DESIGNATION, '2HE': APOLAR_DESIGNATION, '1HZ': APOLAR_DESIGNATION, '1HH': APOLAR_DESIGNATION, '3HH': APOLAR_DESIGNATION},  # None of these last few should be possible given standard nomenclature, but including nevertheless
    'TYR': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, '1HB': APOLAR_DESIGNATION, '2HB': APOLAR_DESIGNATION, 'HD1': APOLAR_DESIGNATION, 'HD2': APOLAR_DESIGNATION, 'HE1': APOLAR_DESIGNATION, 'HE2': APOLAR_DESIGNATION, 'HB1': APOLAR_DESIGNATION, 'HB2': APOLAR_DESIGNATION, '1HD': APOLAR_DESIGNATION,
            '2HD': APOLAR_DESIGNATION, '1HE': APOLAR_DESIGNATION, '2HE': APOLAR_DESIGNATION, 'HH': POLAR_DESIGNATION},
    'VAL': {'H': POLAR_DESIGNATION, 'HA': APOLAR_DESIGNATION, 'HB': APOLAR_DESIGNATION, '1HG1': APOLAR_DESIGNATION, '2HG1': APOLAR_DESIGNATION, '3HG1': APOLAR_DESIGNATION, '1HG2': APOLAR_DESIGNATION, '2HG2': APOLAR_DESIGNATION, '3HG2': APOLAR_DESIGNATION, 'HG11': APOLAR_DESIGNATION,
            'HG12': APOLAR_DESIGNATION, 'HG13': APOLAR_DESIGNATION, 'HG21': APOLAR_DESIGNATION, 'HG22': APOLAR_DESIGNATION, 'HG23': APOLAR_DESIGNATION}}
termini_polarity = {'1H': POLAR_DESIGNATION, '2H': POLAR_DESIGNATION, '3H': POLAR_DESIGNATION, 'H': POLAR_DESIGNATION, 'H1': POLAR_DESIGNATION, 'H2': POLAR_DESIGNATION, 'H3': POLAR_DESIGNATION, 'OXT': POLAR_DESIGNATION}
atom_and_resiude_type_to_radii = {
    ('CA', 'GLY'): CARBON_SP3_RADIUS,
    ('CA', 'ALA'): CARBON_SP3_RADIUS,
    ('CA', 'CYS'): CARBON_SP3_RADIUS,
    ('CA', 'ASP'): CARBON_SP3_RADIUS,
    ('CA', 'GLU'): CARBON_SP3_RADIUS,
    ('CA', 'PHE'): CARBON_SP3_RADIUS,
    ('CA', 'HIS'): CARBON_SP3_RADIUS,
    ('CA', 'LYS'): CARBON_SP3_RADIUS,
    ('CA', 'LEU'): CARBON_SP3_RADIUS,
    ('CA', 'MET'): CARBON_SP3_RADIUS,
    ('CA', 'ASN'): CARBON_SP3_RADIUS,
    ('CA', 'PRO'): CARBON_SP3_RADIUS,
    ('CA', 'GLN'): CARBON_SP3_RADIUS,
    ('CA', 'ARG'): CARBON_SP3_RADIUS,
    ('CA', 'SER'): CARBON_SP3_RADIUS,
    ('CA', 'TRP'): CARBON_SP3_RADIUS,
    ('CA', 'TYR'): CARBON_SP3_RADIUS,
    ('CA', 'ILE'): CARBON_SP3_RADIUS,
    ('CA', 'THR'): CARBON_SP3_RADIUS,
    ('CA', 'VAL'): CARBON_SP3_RADIUS,
    ('CB', 'ALA'): CARBON_SP3_RADIUS,
    ('CB', 'CYS'): CARBON_SP3_RADIUS,
    ('CB', 'ASP'): CARBON_SP3_RADIUS,
    ('CB', 'GLU'): CARBON_SP3_RADIUS,
    ('CB', 'PHE'): CARBON_SP3_RADIUS,
    ('CB', 'HIS'): CARBON_SP3_RADIUS,
    ('CB', 'LYS'): CARBON_SP3_RADIUS,
    ('CB', 'LEU'): CARBON_SP3_RADIUS,
    ('CB', 'MET'): CARBON_SP3_RADIUS,
    ('CB', 'ASN'): CARBON_SP3_RADIUS,
    ('CB', 'PRO'): CARBON_SP3_RADIUS,
    ('CB', 'GLN'): CARBON_SP3_RADIUS,
    ('CB', 'ARG'): CARBON_SP3_RADIUS,
    ('CB', 'SER'): CARBON_SP3_RADIUS,
    ('CB', 'TRP'): CARBON_SP3_RADIUS,
    ('CB', 'TYR'): CARBON_SP3_RADIUS,
    ('CB', 'ILE'): CARBON_SP3_RADIUS,
    ('CB', 'THR'): CARBON_SP3_RADIUS,
    ('CB', 'VAL'): CARBON_SP3_RADIUS,
    ('CG', 'ASP'): CARBON_SP3_RADIUS,
    ('CG', 'LEU'): CARBON_SP3_RADIUS,
    ('CG', 'ASN'): CARBON_SP3_RADIUS,
    ('CG', 'PHE'): CARBON_SP2_H_RADIUS,
    ('CG', 'HIS'): CARBON_SP2_H_RADIUS,
    ('CG', 'TRP'): CARBON_SP2_H_RADIUS,
    ('CG', 'TYR'): CARBON_SP2_H_RADIUS,
    ('CG', 'GLU'): CARBON_SP3_RADIUS,
    ('CG', 'LYS'): CARBON_SP3_RADIUS,
    ('CG', 'MET'): CARBON_SP3_RADIUS,
    ('CG', 'PRO'): CARBON_SP3_RADIUS,
    ('CG', 'GLN'): CARBON_SP3_RADIUS,
    ('CG', 'ARG'): CARBON_SP3_RADIUS,
    ('CG1', 'VAL'): CARBON_SP3_RADIUS,
    ('CG1', 'ILE'): CARBON_SP3_RADIUS,
    ('CG2', 'VAL'): CARBON_SP3_RADIUS,
    ('CG2', 'ILE'): CARBON_SP3_RADIUS,
    ('CG2', 'THR'): CARBON_SP3_RADIUS,
    ('CD', 'ILE'): CARBON_SP3_RADIUS,
    ('CD', 'GLU'): CARBON_SP3_RADIUS,
    ('CD', 'GLN'): CARBON_SP3_RADIUS,
    ('CD', 'LYS'): CARBON_SP3_RADIUS,
    ('CD', 'PRO'): CARBON_SP3_RADIUS,
    ('CD', 'ARG'): CARBON_SP3_RADIUS,
    ('CD1', 'PHE'): CARBON_SP2_H_RADIUS,
    ('CD1', 'TRP'): CARBON_SP2_H_RADIUS,
    ('CD1', 'TYR'): CARBON_SP2_H_RADIUS,
    ('CD1', 'LEU'): CARBON_SP3_RADIUS,
    ('CD2', 'LEU'): CARBON_SP3_RADIUS,
    ('CD2', 'PHE'): CARBON_SP2_H_RADIUS,
    ('CD2', 'HIS'): CARBON_SP2_H_RADIUS,
    ('CD2', 'TYR'): CARBON_SP2_H_RADIUS,
    ('CD2', 'TRP'): CARBON_SP2_RADIUS,
    ('CE', 'LYS'): CARBON_SP3_RADIUS,
    ('CE', 'MET'): CARBON_SP3_RADIUS,
    ('CE1', 'PHE'): CARBON_SP2_H_RADIUS,
    ('CE1', 'HIS'): CARBON_SP2_H_RADIUS,
    ('CE1', 'TYR'): CARBON_SP2_H_RADIUS,
    ('CE2', 'TRP'): CARBON_SP2_RADIUS,
    ('CE2', 'PHE'): CARBON_SP2_H_RADIUS,
    ('CE2', 'TRP'): CARBON_SP2_H_RADIUS,
    ('CE2', 'TYR'): CARBON_SP2_H_RADIUS,
    ('CE3', 'TRP'): CARBON_SP3_RADIUS,
    ('CZ2', 'TRP'): CARBON_SP3_RADIUS,
    ('CZ3', 'TRP'): CARBON_SP3_RADIUS,
    ('CZ', 'PHE'): CARBON_SP2_H_RADIUS,
    ('CZ', 'TYR'): CARBON_SP2_H_RADIUS,
    ('OH', 'TYR'): OXYGEN_RADIUS,
    ('CZ', 'ARG'): CARBON_SP2_RADIUS,
    ('CH2', 'TRP'): CARBON_SP3_RADIUS,
    ('ND2', 'ASN'): NITROGEN_RADIUS,
    ('NE', 'ARG'): NITROGEN_RADIUS,
    ('NE1', 'TRP'): NITROGEN_RADIUS,
    ('ND1', 'HIS'): NITROGEN_RADIUS,
    ('NE2', 'HIS'): NITROGEN_RADIUS,
    ('NE2', 'GLN'): NITROGEN_RADIUS,
    ('NH1', 'ARG'): NITROGEN_RADIUS,
    ('NH2', 'ARG'): NITROGEN_RADIUS,
    ('NZ', 'LYS'): NITROGEN_RADIUS,
    ('OD1', 'ASP'): O_CARBONYL_RADIUS,
    ('OD1', 'ASN'): O_CARBONYL_RADIUS,
    ('OD2', 'ASP'): O_CARBONYL_RADIUS,
    ('OE1', 'GLU'): O_CARBONYL_RADIUS,
    ('OE1', 'GLN'): O_CARBONYL_RADIUS,
    ('OE2', 'GLU'): O_CARBONYL_RADIUS,
    ('O', 'GLY'): O_CARBONYL_RADIUS,
    ('O', 'ALA'): O_CARBONYL_RADIUS,
    ('O', 'CYS'): O_CARBONYL_RADIUS,
    ('O', 'ASP'): O_CARBONYL_RADIUS,
    ('O', 'GLU'): O_CARBONYL_RADIUS,
    ('O', 'PHE'): O_CARBONYL_RADIUS,
    ('O', 'HIS'): O_CARBONYL_RADIUS,
    ('O', 'LYS'): O_CARBONYL_RADIUS,
    ('O', 'LEU'): O_CARBONYL_RADIUS,
    ('O', 'MET'): O_CARBONYL_RADIUS,
    ('O', 'ASN'): O_CARBONYL_RADIUS,
    ('O', 'PRO'): O_CARBONYL_RADIUS,
    ('O', 'GLN'): O_CARBONYL_RADIUS,
    ('O', 'ARG'): O_CARBONYL_RADIUS,
    ('O', 'SER'): O_CARBONYL_RADIUS,
    ('O', 'TRP'): O_CARBONYL_RADIUS,
    ('O', 'TYR'): O_CARBONYL_RADIUS,
    ('O', 'ILE'): O_CARBONYL_RADIUS,
    ('O', 'THR'): O_CARBONYL_RADIUS,
    ('O', 'VAL'): O_CARBONYL_RADIUS,
    ('OG', 'SER'): OXYGEN_RADIUS,
    ('OG1', 'THR'): OXYGEN_RADIUS,
    ('SD', 'MET'): SULFUR_RADIUS,
    ('SG', 'CYS'): SULFUR_RADIUS,
    ('N', 'PRO'): NITROGEN_RADIUS,
    ('N', 'GLY'): NITROGEN_RADIUS,
    ('N', 'ALA'): NITROGEN_RADIUS,
    ('N', 'CYS'): NITROGEN_RADIUS,
    ('N', 'ASP'): NITROGEN_RADIUS,
    ('N', 'GLU'): NITROGEN_RADIUS,
    ('N', 'PHE'): NITROGEN_RADIUS,
    ('N', 'HIS'): NITROGEN_RADIUS,
    ('N', 'LYS'): NITROGEN_RADIUS,
    ('N', 'LEU'): NITROGEN_RADIUS,
    ('N', 'MET'): NITROGEN_RADIUS,
    ('N', 'ASN'): NITROGEN_RADIUS,
    ('N', 'PRO'): NITROGEN_RADIUS,
    ('N', 'GLN'): NITROGEN_RADIUS,
    ('N', 'ARG'): NITROGEN_RADIUS,
    ('N', 'SER'): NITROGEN_RADIUS,
    ('N', 'TRP'): NITROGEN_RADIUS,
    ('N', 'TYR'): NITROGEN_RADIUS,
    ('N', 'ILE'): NITROGEN_RADIUS,
    ('N', 'THR'): NITROGEN_RADIUS,
    ('N', 'VAL'): NITROGEN_RADIUS,
    ('C', 'ALA'): CARBON_SP2_RADIUS,
    ('C', 'CYS'): CARBON_SP2_RADIUS,
    ('C', 'ASP'): CARBON_SP2_RADIUS,
    ('C', 'GLU'): CARBON_SP2_RADIUS,
    ('C', 'PHE'): CARBON_SP2_RADIUS,
    ('C', 'GLY'): CARBON_SP2_RADIUS,
    ('C', 'HIS'): CARBON_SP2_RADIUS,
    ('C', 'ILE'): CARBON_SP2_RADIUS,
    ('C', 'LYS'): CARBON_SP2_RADIUS,
    ('C', 'LEU'): CARBON_SP2_RADIUS,
    ('C', 'MET'): CARBON_SP2_RADIUS,
    ('C', 'ASN'): CARBON_SP2_RADIUS,
    ('C', 'PRO'): CARBON_SP2_RADIUS,
    ('C', 'GLN'): CARBON_SP2_RADIUS,
    ('C', 'ARG'): CARBON_SP2_RADIUS,
    ('C', 'SER'): CARBON_SP2_RADIUS,
    ('C', 'THR'): CARBON_SP2_RADIUS,
    ('C', 'VAL'): CARBON_SP2_RADIUS,
    ('C', 'TRP'): CARBON_SP2_RADIUS,
    ('C', 'TYR'): CARBON_SP2_RADIUS,
}
"""Where each radii is dependent on the atom and residue type"""

# Compile hydrogen polarity data
for res_type, residue_atoms in atomic_polarity_table.items():
    residue_atoms.update(termini_polarity)
    residue_type_hydrogens = hydrogens[res_type]
    residue_atoms.update(residue_type_hydrogens)

    # Save hydrogen atom type radii
    for hydrogen_atom_type in residue_type_hydrogens:
        atom_and_resiude_type_to_radii[(hydrogen_atom_type, res_type)] = HYDROGEN_RADIUS
