
use strict;
#use warnings;
 
#@Constants::aas  = split(//, "ARNDCQEGHILKMFPSTWYV");
@Constants::aas  = split(//,  "GASCVTIPMDNLKEQRHFYW");
          

# The BLOSUM62 amino acid substitution matrix

@Constants::blosum62 = 
  #  G  A  S  C  V  T  I  P  M  D  N  L  K  E  Q  R  H  F  Y  W
( [  9, 0,-1,-6,-6,-3,-7,-5,-5,-3,-1,-7,-3,-4,-4,-4,-4,-6,-6,-6],
  [  0, 7, 2,-1,-1, 0,-3,-1,-2,-3,-3,-3,-1,-2,-2,-3,-3,-4,-4,-5],
  [ -1, 2, 7,-2,-3, 2,-4,-2,-3,-1, 1,-4,-1,-1,-1,-2,-2,-4,-3,-6],
  [ -6,-1,-2,13,-2,-2,-2,-6,-3,-7,-5,-3,-6,-7,-5,-6,-7,-4,-5,-5],
  [ -6,-1,-3,-2, 7, 0, 4,-4, 1,-6,-5, 1,-4,-4,-4,-4,-5,-2,-3,-5],
  [ -3, 0, 2,-2, 0, 8,-2,-3,-1,-2, 0,-3,-1,-2,-1,-2,-3,-4,-3,-5],
  [ -7,-3,-4,-2, 4,-2, 7,-5, 2,-7,-6, 2,-5,-6,-5,-5,-6,-1,-3,-5],
  [ -5,-1,-2,-6,-4,-3,-5,12,-4,-3,-4,-5,-2,-2,-3,-3,-4,-6,-6,-7],
  [ -5,-2,-3,-3, 1,-1, 2,-4, 9,-6,-4, 3,-3,-4,-1,-3,-4, 0,-3,-3],
  [ -3,-3,-1,-7,-6,-2,-7,-3,-6,10, 2,-7,-2, 2,-1,-3,-2,-6,-6,-8],
  [ -1,-3, 1,-5,-5, 0,-6,-4,-4, 2, 9,-6, 0,-1, 0,-1, 1,-6,-4,-7],
  [ -7,-3,-4,-3, 1,-3, 2,-5, 3,-7,-6, 6,-4,-6,-4,-4,-5, 0,-2,-4],
  [ -3,-1,-1,-6,-4,-1,-5,-2,-3,-2, 0,-4, 8, 1, 2, 3,-1,-5,-4,-6],
  [ -4,-2,-1,-7,-4,-2,-6,-2,-4, 2,-1,-6, 1, 8, 3,-1, 0,-6,-5,-6],
  [ -4,-2,-1,-5,-4,-1,-5,-3,-1,-1, 0,-4, 2, 3, 9, 1, 1,-5,-3,-4],
  [ -4,-3,-2,-6,-4,-2,-5,-3,-3,-3,-1,-4, 3,-1, 1, 9, 0,-5,-4,-5],
  [ -4,-3,-2,-7,-5,-3,-6,-4,-4,-2, 1,-5,-1, 0, 1, 0,12,-2, 3,-4],
  [ -6,-4,-4,-4,-2,-4,-1,-6, 0,-6,-6, 0,-5,-6,-5,-5,-2,10, 4, 0],
  [ -6,-4,-3,-5,-3,-3,-3,-6,-3,-6,-4,-2,-4,-5,-3,-4, 3, 4,11, 3],
  [ -6,-5,-6,-5,-5,-5,-5,-7,-3,-8,-7,-4,-6,-6,-4,-5,-4, 0, 3,16],
    );

# The amino acids, and a hashmap from amino acid to its index 0-19

my %aaIndex;

for (my $i=0; $i<20; $i++) {
  $aaIndex{$Constants::aas[$i]} = $aaIndex{lc($Constants::aas[$i])} = $i;
}

# The score of a pair of amino acids in a given matrix

sub score {
  my ($matrix, $aa1, $aa2) = @_;	# By ref, val, val

#  unless(exists $aaIndex{$aa1} && exists $aaIndex{$aa2}) {
#    print "Error: aaIndex for $aa1 or $aa2 does not exist\n";
#  }
  return $$matrix[$aaIndex{$aa1}][$aaIndex{$aa2}];

}

# The maximum of a list of numbers

sub max {
  my $res = -1E300;
  foreach (@_) {
    if ($_ > $res) {
      $res = $_;
    }
  }
  return $res;
}

1;   # Necessary for this module to load into scripts that use it.
