<ROSETTASCRIPTS>

	<SCOREFXNS>
		# patched version of above, reduces weights by 0.5 as the symmetric score function created with MakeLatticeMover and MakeLayerMover arbitrarily doubles monomeric energy
		<ScoreFunction name="2015_nano" weights="ref2015" patch="%%scripts%%/%%sym_score_patch%%"/>
		<ScoreFunction name="2015_nano_cst" weights="ref2015_cst" patch="%%scripts%%/%%sym_score_patch%%"/>
	</SCOREFXNS>

	<RESIDUE_SELECTORS>
		<Index name="core_residues" resnums="%%core_residues%%" error_on_out_of_bounds_index="0" reverse="0"/>
		<SymmetricalResidue name="core_residues_sym" selector="core_residues" />
		# used for selecting residues on one side of the interface from chain "A". all resnums are listed 23A,54A,65A,90A,etc...
		<Index name="interface1" resnums="%%interface1%%" error_on_out_of_bounds_index="0" reverse="0"/>
		<SymmetricalResidue name="interface1_sym" selector="interface1" />
		# same, but for residues from chain "B"
		<Index name="interface2" resnums="%%interface2%%" error_on_out_of_bounds_index="0" reverse="0"/>
		<SymmetricalResidue name="interface2_sym" selector="interface2" />
		# combined group of all identified interface residues
		<Or name="tot_interface" selectors="interface1,interface2"/>
		<SymmetricalResidue name="tot_interface_sym" selector="tot_interface"/>
		# the negation of all interface residues
		<Not name="not_interface" selector="tot_interface"/>
		# other residues that may be designable
		<Index name="non_interface_designable" resnums="%%required_residues%%" error_on_out_of_bounds_index="0" reverse="0"/>
		# all designable residues
		<Or name="all_designable" selectors="tot_interface,non_interface_designable"/>
		<And name="core_interface1_sym" selectors="core_residues_sym,interface1_sym"/>
		<And name="core_interface2_sym" selectors="core_residues_sym,interface2_sym"/>
		# the negation of all designable residues
		<Not name="not_designable" selector="all_designable"/>
		<Not name="not_core_residues" selector="core_residues"/>
		# all residues
		<True name="full_pose"/>
	</RESIDUE_SELECTORS>

	<TASKOPERATIONS>
		# standard task operation to pull in commandline options
		<InitializeFromCommandline name="init"/>
		# restrict movement of any virtual residues made during symmetry protocol. don't think these are allowed to move unless degrees of freedom are modified, but safe option nonetheless
		<RestrictIdentities name="vrt" identities="XXX" prevent_repacking="1"/>
		# make a design restriction at the beginning of design to make all designable interface residues Gly. They will be modified afterwards by other permissible residues
		<DesignRestrictions name="design_start"> <Action residue_selector="all_designable" aas="G"/> </DesignRestrictions>
		# restrict all non-interface residues to no repacking and no design
		<OperateOnResidueSubset name="not_designable_no_repack" selector="not_designable"> <PreventRepackingRLT/> </OperateOnResidueSubset>
		<OperateOnResidueSubset name="not_core_no_repack" selector="not_core_residues"> <PreventRepackingRLT/> </OperateOnResidueSubset>
		<DesignAround name="des_around_total" resnums="%%interface1%%,%%interface2%%,%%required_residues%%" design_shell="0.1" allow_design="true" resnums_allow_design="true" repack_shell="8.0"/>
		# only use residues included in a %%design_profile%%. options specify how to treat the profile and which rotamers to include for design
		<SeqprofConsensus chain_num="1" name="evolution_cutoff1" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1"/> # filename="%%evolution_profile%%"/> # pulls from -in:file:pssm. TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
		<SeqprofConsensus chain_num="2" name="evolution_cutoff2" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1"/> # filename="%%evolution_profile%%"/> # pulls from -in:file:pssm. TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
		<SeqprofConsensus chain_num="1" name="fssm_cutoff1" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%fragment_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
		<SeqprofConsensus chain_num="2" name="fssm_cutoff2" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%fragment_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
		<SeqprofConsensus chain_num="1" name="pssm_cutoff1" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%design_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
		<SeqprofConsensus chain_num="2" name="pssm_cutoff2" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%design_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
	</TASKOPERATIONS>

	<SIMPLE_METRICS>
		# calculate the interaction energy metric between residues in two selections. I believe this in only the two body components to understand the interface component of energy
		<PerResidueEnergyMetric name="M_int_energy_per_res" custom_type="per" output_as_pdb_nums="true" residue_selector="tot_interface_sym" use_native="false" scoretype="total_score" scorefxn="2015_nano"/>
<!--		<SelectedResidueCountMetric name="M_core_residue_count" residue_selector="core_residues"/>-->
		# Todo make cache use true!
		<ResidueSummaryMetric name="M_interface_residue_mean_energy" custom_type="" metric="M_int_energy_per_res" action="mean"/> # action_value="(real)" epsilon="0.0001" use_cached_data="true" cache_prefix="(string)" cache_suffix="(string)" fail_on_missing_cache="(true bool)"
		<InteractionEnergyMetric name="M_interaction_energy" residue_selector="interface1_sym" residue_selector2="interface2_sym" scorefxn="2015_nano" custom_type="" force_rescore="false"/>
<!--		<CalculatorMetric name="M_interaction_energy_density_metric" equation="E / Number" custom_type="filter_core_pack">-->
<!--			<Var name="E" reported="M_interaction_energy"/> #  metric="M_interaction_energy"-->
<!--			<Var name="Number" reported="M_core_residue_count"/>-->
<!--		</CalculatorMetric>--> # Todo not supported in cassini release version
	</SIMPLE_METRICS>

	<MOVE_MAP_FACTORIES>
<!--		<MoveMapFactory name="core_map" bb="0" chi="1">-->
<!--			<Backbone residue_selector="core_residues" enable="true"/>-->
<!--		</MoveMapFactory>-->
		<MoveMapFactory name="design_map" bb="0" chi="1">
			<Backbone residue_selector="all_designable" enable="true"/>
		</MoveMapFactory>
	</MOVE_MAP_FACTORIES>

	<MOVERS>
		<AddJobPairData name="job_info" key="protocol" value="hbnet_scout" value_type="string"/>
		# generates symmetry for the system in question using %%sdf%% or %%dist%%
<!--		<SetupForSymmetry name="make_point_group" definition="%%sdf%%" set_global_symmetry_at_parsetime="0"/>-->
<!--		<MakeLayerMover name="make_layer" contact_dist="%%dist%%"/>-->
<!--		<MakeLatticeMover name="make_lattice" contact_dist="%%dist%%"/>-->
<!--		<SwitchMover name="symmetry_switch" movers="make_point_group,make_layer,make_lattice,null" selected="%%symmetry%%"/>-->
		<AddConstraints name="add_csts">
			<CoordinateConstraintGenerator name="coord_cst_gen"/> # DEFAULTS -> native="false" sd="0.5" bounded="false" sidechain="false" ca_only="false" ambiguous_hnq="false" align_reference="false" bounded_width="0" sidechain="false" to constrain backbone heavy atoms, could try ca_only as well. bounded="false" makes constraint type harmonic
		</AddConstraints>
		<SavePoseMover name="save_core_pack" restore_pose="0" reference_name="core_pack"/>
		<SavePoseMover name="restore_core_pack" restore_pose="1" reference_name="core_pack"/>
		# set all interface residues to GLY, leave everything else untouched
		<SymPackRotamersMover name="design_start" scorefxn="2015_nano_cst" task_operations="init,vrt,design_start,not_designable_no_repack"/>

<!--		# the main routine to perform metropolis criteria monte carlo-->
<!--		<FastDesign name="int_design" scorefxn="2015_nano_cst" disable_design="false" task_operations="init,vrt,pssm_cutoff,des_around_total,hbnet_rtr" repeats="1" relaxscript="PolarDesign2019" ramp_down_constraints="false" delete_virtual_residues_after_FastRelax="false" movemap_factory="design_map"/> # cgs="coord_cst_gen" min_type="lbfgs_armijo_nonmonotone" bondangle="false" bondlength="false"-->
<!--		# sample all rotamers to find minimum-->
<!--		<SymRotamerTrialsMover name="RT" scorefxn="2015_nano_cst" task_operations="init,rtr"/>-->
<!--		# minimize all residues in design_map (move map)-->
<!--		<SymMinMover name="min" scorefxn="2015_nano_cst" movemap_factory="design_map"/> # bb="0" chi="1"-->
<!--		# the main protocol to loop over for interface design-->
<!--		<ParsedProtocol name="rotamer_trials_min_mover">-->
<!--			<Add mover_name="RT"/>-->
<!--			<Add mover_name="min"/> # Min unused in P432-->
<!--		</ParsedProtocol>-->
<!--		<ParsedProtocol name="design_block">-->
<!--			<Add mover_name="int_design"/>-->
<!--			<Add mover_name="rotamer_trials_min_mover"/>-->
<!--		</ParsedProtocol>-->
		# evolution_cutoff, fssm_cutoff have an and effect when applied to core fragment residue possibilities due to the nature of task_operations
<!--		<FastDesign name="interface_core_design" task_operations="init,vrt,evolution_cutoff1,fssm_cutoff1,evolution_cutoff2,fssm_cutoff2,not_core_no_repack" movemap_factory="design_map" scorefxn="2015_nano_cst" repeats="1" relaxscript="InterfaceDesign2019" ramp_down_constraints="false" disable_design="false" delete_virtual_residues_after_FastRelax="false"/> # cgs="coord_cst_gen" min_type="lbfgs_armijo_nonmonotone" bondangle="false" bondlength="false"-->
<!--		<ConstraintSetMover name="add_file_csts" add_constraints="1" cst_file="%%cst_file%%"/>-->
		# the main hbnet mover with new recommended generation method of monte_carlo="true",
		# hb_threshold is not cut in half as the symmetry scoring is doubled, then halved, so the threshold seems to be correct scale.
		Modified to -0.65 as reported in the literature (-ex1-ex2 sampling is on)
		# using -ex1-ex2 might need threshold=-0.75
		# need to ensure a scorefunction with csts "on"
		# may not need required_residues which gets pulled from design around total. start_selector would prevent much downside though
		<HBNet name="hbnet" hb_threshold="-0.65" start_selector="core_residues" task_operations="init,vrt,pssm_cutoff1,pssm_cutoff2,des_around_total" min_network_size="3" max_unsat_Hpol="1" monte_carlo="true" total_num_mc_runs="50000" scorefxn="2015_nano_cst" write_network_pdbs="0" write_cst_files="0"/>
        <MultiplePoseMover name="hbnet_corepack" max_input_poses="250"> # scale to 500?
			# only use _cst scorefxn during design to make sure the constraints automatically turned on by HBNet are respected
			<ROSETTASCRIPTS>
				<SCOREFXNS>
					# patched version, reduces weights by 0.5 as the symmetric score function created with MakeLatticeMover and MakeLayerMover arbitrarily doubles monomeric energy
					<ScoreFunction name="2015_nano" weights="ref2015" patch="%%scripts%%/%%sym_score_patch%%"/>
					<ScoreFunction name="2015_nano_cst" weights="ref2015_cst" patch="%%scripts%%/%%sym_score_patch%%"/>
				</SCOREFXNS>

				<RESIDUE_SELECTORS>
					<Index name="core_residues" resnums="%%core_residues%%" error_on_out_of_bounds_index="0" reverse="0"/>
					<SymmetricalResidue name="core_residues_sym" selector="core_residues"/>
					<Neighborhood name="core_neighbors_sym" selector="core_residues_sym" include_focus_in_subset="false" distance="8"/> # Cb neighbors
					# used for selecting residues on one side of the interface from chain "A". all resnums are listed 23A,54A,65A,90A,etc...
					<Index name="interface1" resnums="%%interface1%%" error_on_out_of_bounds_index="0" reverse="0"/>
					<SymmetricalResidue name="interface1_sym" selector="interface1" />
					# same, but for residues from chain "B"
					<Index name="interface2" resnums="%%interface2%%" error_on_out_of_bounds_index="0" reverse="0"/>
					<SymmetricalResidue name="interface2_sym" selector="interface2" />
					# combined group of all identified interface residues
					<Or name="tot_interface" selectors="interface1,interface2"/>
					<SymmetricalResidue name="tot_interface_sym" selector="tot_interface" />
					# the negation of all interface residues
					<Not name="not_interface" selector="tot_interface"/>
					# other residues that may be designable
					<Index name="non_interface_designable" resnums="%%required_residues%%" error_on_out_of_bounds_index="0" reverse="0"/>
					# all designable residues
					<Or name="all_designable" selectors="tot_interface,non_interface_designable"/>
					# the negation of all designable residues
					<Not name="not_designable" selector="all_designable"/>
					# all residues
					<True name="full_pose"/>
					# Automatically detect all HBNet residues. CRITICAL for HBNet operation
					<ResiduePDBInfoHasLabel name="hbnet_residues" property="HBNet"/>
					<SymmetricalResidue name="hbnet_residues_sym" selector="hbnet_residues" />
					<Neighborhood name="hbnet_neighbors" selector="hbnet_residues" include_focus_in_subset="false" distance="8"/> # Cb neighbors
					<SymmetricalResidue name="hbnet_neighbors_sym" selector="hbnet_neighbors" />
					<Or name="hbnet_neighbors_or_core" selectors="hbnet_neighbors,core_residues"/>
					<Or name="hbnet_neighbors_or_core_sym" selectors="hbnet_neighbors_sym,core_residues_sym"/>
					<Not name="not_hbnet_or_core_neighbors" selector="hbnet_neighbors_or_core"/>
					<And name="hbnet_interface_neighbors" selectors="hbnet_neighbors,tot_interface"/>
					<And name="hbnet_interface_neighbors_sym" selectors="hbnet_neighbors_sym,tot_interface_sym"/>
					<Or name="hbnet_interface_neighbors_or_core" selectors="hbnet_interface_neighbors,core_residues"/>
					<Or name="hbnet_interface_neighbors_or_core_sym" selectors="hbnet_interface_neighbors_sym,core_residues_sym"/>
<!--					<SymmetricalResidue name="hbnet_interface_neighbors_or_core_sym" selector="hbnet_interface_neighbors_or_core"/>-->
					<Or name="hbnet_or_interface_neighbors_or_core" selectors="hbnet_residues,hbnet_interface_neighbors_or_core"/>
					<Or name="hbnet_or_interface_neighbors_or_core_sym" selectors="hbnet_residues_sym,hbnet_interface_neighbors_or_core_sym"/>
					<Not name="not_hbnet_interface_neighbors_or_core_sym" selector="hbnet_interface_neighbors_or_core_sym"/>
					<And name="hbnet_corepack_interface1" selectors="hbnet_interface_neighbors_or_core_sym,interface1_sym"/>
					<And name="hbnet_corepack_interface2" selectors="hbnet_interface_neighbors_or_core_sym,interface2_sym"/>
				</RESIDUE_SELECTORS>

				<TASKOPERATIONS>
					# standard task operation to pull in commandline options
					<InitializeFromCommandline name="init"/>
					# restrict movement of any virtual residues made during symmetry protocol. don't think these are allowed to move unless degrees of freedom are modified, but safe option nonetheless
					<RestrictIdentities name="vrt" identities="XXX" prevent_repacking="1"/>
					# standard operation to restrict all residues to repacking
					<RestrictToRepacking name="rtr"/>
<!--					# make a design restriction at the beginning of design to make all designable interface residues Gly. They will be modified afterwards by other permissible residues-->
<!--					<DesignRestrictions name="design_start"> <Action residue_selector="all_designable" aas="G"/> </DesignRestrictions>-->
			<!--		# disable repacking of the interface only-->
			<!--		<OperateOnResidueSubset name="designable_no_repack" selector="all_designable"> <PreventRepackingRLT/> </OperateOnResidueSubset>-->
			<!--		# restrict all non-interface residues to repacking only, no design-->
			<!--		<OperateOnResidueSubset name="not_designable_rtr" selector="not_designable"> <RestrictToRepackingRLT/> </OperateOnResidueSubset>-->
<!--					# restrict all non-interface residues to no repacking and no design-->
<!--					<OperateOnResidueSubset name="not_designable_no_repack" selector="not_designable"> <PreventRepackingRLT/> </OperateOnResidueSubset>-->
			<!--		# make a design restriction at the beginning of design to make all designable interface residues Gly. They will be modified afterwards by other permissible residues-->
			<!--		<DesignRestrictions name="interface_start"> <Action residue_selector="tot_interface" aas="G"/> </DesignRestrictions>		-->
			<!--		# disable repacking of the interface only-->
			<!--		<OperateOnResidueSubset name="int_no_repack" selector="tot_interface"> <PreventRepackingRLT/> </OperateOnResidueSubset>-->
			<!--		# restrict all non-interface residues to repacking only, no design-->
			<!--		<OperateOnResidueSubset name="non_int_rtr" selector="not_interface"> <RestrictToRepackingRLT/> </OperateOnResidueSubset>-->
			<!--		# restrict all non-interface residues to no repacking and no design-->
			<!--		<OperateOnResidueSubset name="non_int_no_repack" selector="not_interface"> <PreventRepackingRLT/> </OperateOnResidueSubset>-->
					<OperateOnResidueSubset name="hbnet_rtr" selector="hbnet_residues"> <RestrictToRepackingRLT/> </OperateOnResidueSubset>
					<OperateOnResidueSubset name="design_hbnet_interface_neighbors_and_core" selector="not_hbnet_interface_neighbors_or_core_sym"> <PreventRepackingRLT/> </OperateOnResidueSubset>
					# only use residues around specified resnums for design and repacking. The shell indicates a distance at which the mover searches for resnum neighbors to operate on
					<DesignAround name="des_around_total" resnums="%%interface1%%,%%interface2%%,%%required_residues%%" design_shell="0.1" allow_design="true" resnums_allow_design="true" repack_shell="8.0"/>
					# only use residues included in a %%design_profile%%. options specify how to treat the profile and which rotamers to include for design
					<SeqprofConsensus chain_num="1" name="evolution_cutoff1" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1"/> # filename="%%evolution_profile%%"/> # pulls from -in:file:pssm. TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
					<SeqprofConsensus chain_num="2" name="evolution_cutoff2" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1"/> # filename="%%evolution_profile%%"/> # pulls from -in:file:pssm. TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
					<SeqprofConsensus chain_num="1" name="fssm_cutoff1" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%fragment_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
					<SeqprofConsensus chain_num="2" name="fssm_cutoff2" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%fragment_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle
<!--					<SeqprofConsensus chain_num="1" name="pssm_cutoff1" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%design_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle-->
<!--					<SeqprofConsensus chain_num="2" name="pssm_cutoff2" min_aa_probability="-9" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1" filename="%%design_profile%%"/> # TODO use_occurrence_data="1" on docs is an option as of 5/13/21. Not present in 2020.11.61179_bundle-->
				</TASKOPERATIONS>

				<MOVE_MAP_FACTORIES>
					<MoveMapFactory name="hbnet_interface_neighbors_or_core_map" bb="0" chi="1">
						<Backbone residue_selector="hbnet_interface_neighbors_or_core" enable="true"/>
					</MoveMapFactory>
				</MOVE_MAP_FACTORIES>

				<SIMPLE_METRICS>
					<SelectedResidueCountMetric name="M_core_design_residue_count" residue_selector="hbnet_or_interface_neighbors_or_core"/>
					# calculate the interaction energy metric between residues in two selections. I believe this in only the two body components to understand the interface component of energy
					<InteractionEnergyMetric name="M_interaction_energy" residue_selector="interface1_sym" residue_selector2="interface2_sym" scorefxn="2015_nano" custom_type="" force_rescore="false"/>
<!--					<CalculatorMetric name="M_interaction_energy_density_metric" equation="E / Number" custom_type="filter_core_pack">-->
<!--						<Var name="E" reported="M_interaction_energy"/> #  metric="M_interaction_energy"-->
<!--						<Var name="Number" reported="M_core_design_residue_count"/>-->
<!--					</CalculatorMetric>--> # Todo not supported in my release
				</SIMPLE_METRICS>

<!--				<IMPORT movers="extract_asymmetric_unit"/> # movers="design_block" shape_complementarity-->

				<FILTERS>  # TODO change min_sc to ~0.65 or 0.7
					<ShapeComplementarity name="shape_complementarity_hbnet_core" min_sc="0.7" min_interface="0" residue_selector1="hbnet_corepack_interface1" residue_selector2="hbnet_corepack_interface2" write_median_dist="0" max_median_dist="0"/> #Bug in max_median_dist turns it into minimum median distance. If this is fixed, make the max something like 100+ as we just want the distance, not to actually filter
<!--					<SimpleMetricFilter name="interaction_energy_density" metric="M_interaction_energy_density_metric" comparison_type="lt" cutoff="0" confidence="1"/> # epsilon=".0001" use_cached_data="(false bool)" cache_prefix="(string)" cache_suffix="(string)" fail_on_missing_cache="(true bool)" # match="(string)" use_sum_for_per_residue_real="(bool)" composite_action="(string)"-->
					<SimpleMetricFilter name="interaction_energy" metric="M_interaction_energy" comparison_type="lt" cutoff="0" confidence="1"/> # epsilon=".0001" use_cached_data="(false bool)" cache_prefix="(string)" cache_suffix="(string)" fail_on_missing_cache="(true bool)" # match="(string)" use_sum_for_per_residue_real="(bool)" composite_action="(string)"
					<SimpleMetricFilter name="core_design_residue_count" metric="M_core_design_residue_count" comparison_type="gt" cutoff="10" confidence="1"/> # epsilon=".0001" cache_prefix="(string)" cache_suffix="(string)" fail_on_missing_cache="(true bool)" # match="(string)" use_sum_for_per_residue_real="(bool)" composite_action="(string)"
					<CalculatorFilter name="interaction_energy_density" equation="E / Number"> # threshold="(real 0)"
						<Var name="E" filter="interaction_energy"/>
						<Var name="Number" filter="core_design_residue_count"/>
					</CalculatorFilter>
					<Report name="R_shape_complementarity_hbnet_core" 	filter="shape_complementarity_hbnet_core"/>
					<Report name="R_core_design_residue_count" 			filter="core_design_residue_count"/>
					<Report name="R_interaction_energy_density" 		filter="interaction_energy_density"/>
				</FILTERS>

				<MOVERS>
					<ExtractAsymmetricUnit name="extract_asymmetric_unit" keep_virtual="0"/>
					# the main routine to perform metropolis criteria monte carlo
					# evolution_cutoff, fssm_cutoff have an and effect when applied to core fragment residue possibilities due to the nature of task_operations
					<FastDesign name="hbnet_core_design" task_operations="init,vrt,evolution_cutoff1,fssm_cutoff1,evolution_cutoff2,fssm_cutoff2,hbnet_rtr,design_hbnet_interface_neighbors_and_core" movemap_factory="hbnet_interface_neighbors_or_core_map" scorefxn="2015_nano_cst" repeats="1" relaxscript="PolarDesign2019" ramp_down_constraints="false" disable_design="false" delete_virtual_residues_after_FastRelax="false"/> # cgs="coord_cst_gen" min_type="lbfgs_armijo_nonmonotone" bondangle="false" bondlength="false"
					<RunSimpleMetrics name="run_core_design_metrics" metrics="M_interaction_energy" prefix="" suffix="" override="false"/> # M_core_design_residue_count
<!--					<RunSimpleMetrics name="run_core_design_average_residue_energy" metrics="M_interaction_energy_density_metric" prefix="" suffix="" override="false"/>-->
					<FilterReportAsPoseExtraScoresMover name="RP_shape_complementarity_hbnet_core" report_as="sc_hbnet_core" filter_name="shape_complementarity_hbnet_core"/>
					<FilterReportAsPoseExtraScoresMover name="RP_interaction_energy_density" report_as="ie_density_hbnet_core" filter_name="interaction_energy_density"/>
					<FilterReportAsPoseExtraScoresMover name="RP_core_design_residue_count" report_as="residue_count_hbnet_core" filter_name="core_design_residue_count"/>
<!--					<DumpPdb name="dump_pdb" fname="hbnet_interface_neighbors_and_core_packing.pdb" scorefxn="2015_nano_cst" tag_time="1"/>-->
				</MOVERS>

				<PROTOCOLS>
<!--					<Add mover_name="restore_core_pack"/>-->
<!--					<Add mover_name="design_block"/>-->
					<Add mover_name="hbnet_core_design"/> # packing should reach ideal levels here
<!--					<Add filter_name="shape_complementarity_hbnet_core" report_at_end="false"/> # if not, throw away, move on-->
<!--					<Add filter_name="time"/>-->
<!--					<Add mover_name="RP_shape_complementarity_hbnet_core"/> # THIS DOESN'T FILTER, it is saved to pose and bad SC will be thrown out in "trim" step-->
<!--&lt;!&ndash;					<Add mover_name="run_core_design_metrics"/>&ndash;&gt;-->
<!--					<Add mover_name="RP_core_design_residue_count"/>-->
<!--&lt;!&ndash;					<Add filter_name="interaction_energy"/>&ndash;&gt;-->
<!--&lt;!&ndash;					<Add mover_name="run_core_design_average_residue_energy"/>&ndash;&gt;-->
<!--					<Add mover_name="RP_interaction_energy_density"/>-->
<!--&lt;!&ndash;					<Add mover_name="dump_pdb"/>&ndash;&gt;-->
					<Add filter_name="R_shape_complementarity_hbnet_core"/>
					<Add filter_name="R_core_design_residue_count"/>
					<Add filter_name="R_interaction_energy_density"/>
					<Add mover_name="extract_asymmetric_unit"/> # silent file doesn't convert automatically
				</PROTOCOLS>
			</ROSETTASCRIPTS>
        </MultiplePoseMover>
	</MOVERS>

	<FILTERS>
		<Time name="time"/>
		<ReadPoseExtraScoreFilter name="read_sc_hbnet_core" term_name="sc_hbnet_core" threshold="-1"/>
		<ReadPoseExtraScoreFilter name="read_interaction_energy_density" term_name="ie_density_hbnet_core" threshold="-1"/>
		<ReadPoseExtraScoreFilter name="read_interface_residue_count" term_name="residue_count_hbnet_core" threshold="-1"/>
<!--		<ShapeComplementarity name="shape_complementarity_hbnet_core" min_sc="0.65" min_interface="0" residue_selector1="hbnet_corepack_interface1" residue_selector2="hbnet_corepack_interface2" write_median_dist="1" max_median_dist="0"/> #Bug in max_median_dist turns it into minimum median distance. If this is fixed, make the max something like 100+ as we just want the distance, not to actually filter-->
		<ShapeComplementarity name="shape_complementarity_core" min_sc="0.70" min_interface="0" residue_selector1="core_interface1_sym" residue_selector2="core_interface2_sym" write_median_dist="1" max_median_dist="0"/> #Bug in max_median_dist turns it into minimum median distance. If this is fixed, make the max something like 100+ as we just want the distance, not to actually filter
		<ShapeComplementarity name="shape_complementarity" min_sc="0.65" min_interface="0" residue_selector1="interface1_sym" residue_selector2="interface2_sym" write_median_dist="1" max_median_dist="0"/> #Bug in max_median_dist turns it into minimum median distance. If this is fixed, make the max something like 100+ as we just want the distance, not to actually filter
<!--		<SimpleMetricFilter name="interaction_energy" metric="M_interaction_energy" comparison_type="lt" cutoff="0" confidence="1"/> # epsilon=".0001" use_cached_data="(false bool)" cache_prefix="(string)" cache_suffix="(string)" fail_on_missing_cache="(true bool)" # match="(string)" use_sum_for_per_residue_real="(bool)" composite_action="(string)"-->
<!--		<SimpleMetricFilter name="interaction_energy_density" metric="M_interaction_energy_density_metric" comparison_type="lt" cutoff="0" confidence="1"/> # epsilon=".0001" use_cached_data="(false bool)" cache_prefix="(string)" cache_suffix="(string)" fail_on_missing_cache="(true bool)" # match="(string)" use_sum_for_per_residue_real="(bool)" composite_action="(string)"-->
<!--		<CalculatorFilter name="interaction_energy_density" equation="E / IA" threshold="(&real 0)" >-->
<!--		  <Var name="E" filter="interaction_energy"/>-->
<!--		  <Var name="IA" filter="interface_area"/>-->
<!--		</CalculatorFilter>-->
	</FILTERS>

	# Symmetry set up section
	<FILTERS>
		<ReadPoseExtraScoreFilter name="read_sym" term_name="sym_status" threshold="-0.5"/>
	</FILTERS>
	<MOVERS>
		<Subroutine name="symmetry" xml_fname="%%scripts%%/symmetry.xml"/>
<!--		<If name="" filter_name="read_sym" true_mover_name="sym_" false_mover_name="asymmetric_"/>-->
	</MOVERS>

	<PROTOCOLS>
<!--		<Add mover_name="SOMETHINGSMISSING"/>-->
		<Add mover_name="symmetry"/>
		<Add mover_name="add_csts"/>
		<Add mover_name="job_info"/>
		<Add mover_name="hbnet"/>
		<Add mover_name="hbnet_corepack"/>
	</PROTOCOLS>

</ROSETTASCRIPTS>