<ROSETTASCRIPTS>

	<SCOREFXNS>
		# patched version of above, reduces weights by 0.5 as the symmetric score function created with MakeLatticeMover and MakeLayerMover arbitrarily doubles monomeric energy
		<ScoreFunction name="2015_nano" weights="ref2015" patch="%%sym_score_patch%%">
			<Reweight scoretype="coordinate_constraint" weight="%%cst_value%%"/>
		</ScoreFunction>
		<ScoreFunction name="2015_nano_soft" weights="ref2015_soft" patch="%%sym_score_patch%%">
			<Reweight scoretype="coordinate_constraint" weight="%%cst_value%%"/>
		</ScoreFunction>
	</SCOREFXNS>

	<RESIDUE_SELECTORS>
		# used for selecting residues on one side of the interface from chain "A". all resnums are listed 23,54,65,90,etc... in the %%interface1%% variable
		<Index name="A_interface" resnums="%%interface1%%" error_on_out_of_bounds_index="1" reverse="0"/>
		# same, but for residues from chain "B"
		<Index name="B_interface" resnums="%%interface2%%" error_on_out_of_bounds_index="1" reverse="0"/>
		# combined group of all identified interface residues
		<Or name="tot_interface" selectors="A_interface,B_interface"/>
		# the negation of all interface residues
		<Not name="not_interface" selector="tot_interface"/>
		# select all residues lower than energy 10 invloved in sidechain hydrogen bonding
		<HBond name="hbond_residues" residue_selector="tot_interface" include_bb_bb="false" hbond_energy_cutoff="10" scorefxn="2015_nano"/>
	</RESIDUE_SELECTORS>

	<TASKOPERATIONS>
		# standard task operation to pull in commandline options
		<InitializeFromCommandline name="init"/>
		# restrict movement of any virtual residues made during symmetry protocol. don't think these are allowed to move unless degrees of freedom are modified, but safe option nonetheless
		<RestrictIdentities name="vrt" identities="XXX" prevent_repacking="1"/>
		# standard operation to restrict all residues to repacking
		<RestrictToRepacking name="rtr"/>
		# make a design restriction at the beggining of design to make all designable interface residues Gly. They will be modified afterwards by other permissable residues
		<DesignRestrictions name="interface_start"> <Action residue_selector="tot_interface" aas="G"/> </DesignRestrictions>
		# disable repacking of the interface only
		<OperateOnResidueSubset name="int_no_repack" selector="tot_interface"> <PreventRepackingRLT/> </OperateOnResidueSubset>
		# restrict the interface to repacking only, no design
		<OperateOnResidueSubset name="int_rtr" selector="tot_interface"> <RestrictToRepackingRLT/> </OperateOnResidueSubset>
		# disable repacking of all non-interface residues
		<OperateOnResidueSubset name="non_int_no_repack" selector="not_interface"> <PreventRepackingRLT/> </OperateOnResidueSubset>
		# restrict all non-interface residues to repacking only, no design
		<OperateOnResidueSubset name="non_int_rtr" selector="not_interface"> <RestrictToRepackingRLT/> </OperateOnResidueSubset>
		# only use residues included in a %%pssm_file%%. options specify how to treat the pssm and which rotamers to include for design
		<SeqprofConsensus name="pssm_cutoff" min_aa_probability="0" convert_scores_to_probabilities="0" probability_larger_than_current="0" keep_native="1"/> # filename="%%msa_pssm%%"
		# only use residues around specified resnums for design and repacking. The shell indicates a distance at which the mover searches for resnum neighbors to operate on
		<DesignAround name="des_around_total" design_shell="0.1" resnums="%%interface1%%,%%interface2%%" repack_shell="8.0"/>
	</TASKOPERATIONS>

	<MOVERS>
		# generates symmetry for the system in question using the pose size of %%dist%%
		<MakeLatticeMover name="make_lattice" contact_dist="%%dist%%"/>
		# extracts from the symmetric pose to the asymmetric unit
		<ExtractAsymmetricUnit name="extract_asu" keep_virtual="0"/>
		# move two folds on different sides of a jump. this instance has the jump between chain A and B and moves them apart the distance on the specified axis (not sure how the axis are defined)
        # repack shell around a design residue
		<SymPackRotamersMover name="soft_design_int" scorefxn="2015_nano_soft" task_operations="init,vrt,pssm_cutoff,des_around_total"/> 
		# repack shell around a design residue read_resfile
		<SymPackRotamersMover name="hard_design_int" scorefxn="2015_nano" task_operations="init,vrt,pssm_cutoff,des_around_total"/> 
		<MinMover name="hard_min" scorefxn="2015_nano" chi="1" bb="0" jump="0"/>
		# minimize backbones/sc at interface (design), minimize sc elsewhere (packing)
		<TaskAwareSymMinMover name="soft_min_design_int" scorefxn="2015_nano_soft" bb="1" chi="1" task_operations="init,vrt,non_int_rtr"/> 
		# minimize backbones/sc at interface, minimize sc elsewhere
		<TaskAwareSymMinMover name="hard_min_design_int" scorefxn="2015_nano" bb="1" chi="1" task_operations="init,vrt,non_int_rtr"/> 
		# sample all rotamers to find minimum
		<SymRotamerTrialsMover name="RTmin" scorefxn="2015_nano" task_operations="init,rtr"/>
		# add coordinate constraint to residues not at interface
		<AtomCoordinateCstMover name="add_coord_cst" coord_dev="1" bounded="0" native="0" task_operations="init,vrt,non_int_rtr,int_no_repack"/>
		# the main protocol to loop over for interface design
		<ParsedProtocol name="design_block">
			<Add mover_name="soft_design_int"/>
			<Add mover_name="soft_min_design_int"/>
			<Add mover_name="soft_design_int"/>
			<Add mover_name="hard_min_design_int"/>
			<Add mover_name="hard_design_int"/>
			<Add mover_name="hard_min_design_int"/>
			<Add mover_name="hard_design_int"/>
			<Add mover_name="RTmin"/>
			<Add mover_name="RTmin"/>
			<Add mover_name="hard_min"/>
		</ParsedProtocol>
		<LoopOver name="design_loop" iterations="1" mover_name="design_block"/>
	</MOVERS>

	<FILTERS>
	</FILTERS>

	<PROTOCOLS>
		<Add mover_name="design_loop"/>
	</PROTOCOLS>

</ROSETTASCRIPTS>
